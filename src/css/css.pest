WHITESPACE = _{ " " | "\t" | "\r" | "\n" }

COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }

StyleSheet = _{ SOI ~ Rules ~ EOI }

Rules = { Rule* }

Rule = _{ Animation | Style }

// @keyframes

Animation = { "@keyframes" ~ Name ~ "{" ~ Keyframes ~ "}" }

Name = @{ (ASCII_ALPHA | ASCII_DIGIT | "-" | "_")+ }

Keyframes = _{ Keyframe* }

Keyframe = { Step ~ DeclarationBlock }

Step = _{ Keyword | Percentage  }

// style

Style = { Selectors ~ DeclarationBlock }

Selectors = { Complex ~ ("," ~ Complex)* }

Complex = { (Combinator? ~ Compound)* }

Combinator = { ">" | "+" | "~" }

Compound = ${ Simple+ }

Simple = _{ All | Id | Class | Root | PseudoClass | PseudoElement | Attribute | Type }

All = { "*" }

Id = { "#" ~ Ident }

Class = { "." ~ Ident }

Type = { Ident }

Attribute = {
    "[" ~ Ident ~ "]" |
    "[" ~ Ident ~ Matcher ~ (String | Ident) ~ Modifier? ~ "]"
}

Matcher = { ("~" | "|" | "^" | "$" | "*")? ~ "=" }

Modifier = { "i" | "s" }

Root = { ":root" }

PseudoClass = {
    ":" ~ Ident ~ "(" ~ (!")" ~ ANY)* ~ ")" |
    ":" ~ Ident
}

PseudoElement = { "::" ~ Ident }

// properties

DeclarationBlock = {
    "{" ~ Declarations ~ "}"
}

Declarations = { Declaration* }

Declaration = { Property ~ ":" ~ Values ~ ";" }

Property = { (ASCII_ALPHA | "-" | "_")+ }

Ident = { (ASCII_ALPHA | ASCII_DIGIT | "-" | "_")+ }

Values = { Shorthand ~ ("," ~ Shorthand)* }

Shorthand = ${ Value ~ (WHITESPACE ~ Value)* }

Value = _{ Var | Function | Explicit }

Function = {
    Ident ~ "(" ~ ")" |
    Ident ~ "(" ~ Value ~ ("," ~ WHITESPACE* ~ Value)* ~ ")"
}

Var = { "var" ~ "(" ~ Keyword ~ ("," ~ Value)? ~ ")" }

Explicit = {
    Color
    | Keyword
    | Percentage
    | Time
    | Dimension
    | Zero
    | Number
    | String
}

Color = { "#" ~ ASCII_HEX_DIGIT+ }

Zero = { "0" ~ !"." }

Percentage = { Number ~ "%" }

Time = { Number ~ TimeUnit }

TimeUnit = { "ms" | "s" }

Dimension = { Number ~ Unit }

Number = { (ASCII_DIGIT | "-" | ".")+ }

Unit = { ASCII_ALPHA+ }

Keyword = { "-"? ~ "-"? ~ (ASCII_ALPHA | "-" | "_")+ }

String = { "\"" ~ StringLiteral ~ "\"" }

StringLiteral = @{ (!"\"" ~ ANY)* }
